package gameboard11;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.Random;
import static javax.swing.WindowConstants.EXIT_ON_CLOSE;

/*
 * ูุนุจุฉ ููุญุฉ ุชูุงุนููุฉ ุจูู ูุงุนุจููุ ุญูุซ ูุชุญุฑู ุงููุงุนุจูู ุนูู ููุญุฉ 9x9 ุจุงุณุชุฎุฏุงู ุงูุฃุณูู.
 * ุงููุฏู: ุฌูุน ุงููููุฏุ ุฒูุงุฏุฉ ุงูุฃุฑูุงุญุ ูุงูุฅุฌุงุจุฉ ุนูู ุงูุฃุณุฆูุฉ ูุชุฌูุจ ุฎุณุงุฑุฉ ุงูุฃุฑูุงุญ.
 * ุงููููุฒุงุช:
 * - ูุจุฏุฃ ุงููุงุนุจูู ูู ุงูุฎููุฉ (0,0) ููุชุญุฑููู ููุดู ุงูุชุฃุซูุฑุงุช (ูููุฏุ ูููุจุ ุฃุณุฆูุฉ).
 * - ุงูุฃุณุฆูุฉ ูุชููุนุฉ (ุซูุงูุฉ ุนุงูุฉุ ุฌุบุฑุงููุงุ ุฑูุงุถูุงุชุ ุนูููุ ุชุงุฑูุฎุ ุฏูููุฉ ุฅุณูุงููุฉุ ูุชููุน).
 * - ูุชู ุชุจุฏูู ุงูุฃุฏูุงุฑ ุจุนุฏ ูู ุญุฑูุฉ ุฃู ุฅุฌุงุจุฉ ุนูู ุณุคุงู.
 * - ุงููุงุนุจ ูุฎุณุฑ ุนูุฏูุง ุชุตุจุญ ุฃุฑูุงุญู ุตูุฑุ ูููุนูู ุงููุงุฆุฒ.
 * - ุชุญุชูู ุงูููุญุฉ ุนูู 15 ุฌุฏุงุฑูุง ุนุดูุงุฆููุง (ูุง ุชุธูุฑ ูู ุฃูู ุตููู ุฃู ุนููุฏูู).
 * - ุงูุฅุฌุงุจุงุช ุนูู ุงูุฃุณุฆูุฉ ุบูุฑ ุญุณุงุณุฉ ููุญุฑููุ ูุงูุชูุงุฑูุฎ/ุงูุญุณุงุจ ุจุงูุฃุฑูุงู.
 */
public class GameBoard11 extends JFrame {

    
    // ุงููุชุบูุฑุงุช ุงูุฃุณุงุณูุฉ ูููุงุฌูุฉ ูุงููุนุจุฉ
    private JPanel mainPanel;
    private JPanel startPanel, boardPanel, infoPanel;
    private CardLayout cardLayout;

    private JLabel effectLabel; // ููุตู ูุนุฑุถ ุงูุชุฃุซูุฑ (ูุซู ๐ฐ ุฃู โ)
    private JLabel p1Info, p2Info; // ููุตูุงุช ูุนูููุงุช ุงููุงุนุจูู (ุงููุงูุ ุงูุฃุฑูุงุญุ ุงูุฏูุฑ)

    private final int SIZE = 9; // ุญุฌู ุงูููุญุฉ 9x9
    private JButton[][] cells = new JButton[SIZE][SIZE]; // ูุตูููุฉ ุงูุฃุฒุฑุงุฑ (ุฎูุงูุง ุงูููุญุฉ)
    private int[][] boardEffects = new int[SIZE][SIZE]; // ูุตูููุฉ ุงูุชุฃุซูุฑุงุช (0=ุฌุฏุงุฑุ 1=ูููุฏุ 2=ููุจุ 3=ููุจ ุฃุณูุฏุ 5=ุณุคุงู)
    private boolean[][] revealed = new boolean[SIZE][SIZE]; // ูุตูููุฉ ูุชุชุจุน ุงูุฎูุงูุง ุงูููุดููุฉ

    private int[] player1 = {0, 0}; // ูููุน ุงููุงุนุจ 1
    private int[] player2 = {0, 0}; // ูููุน ุงููุงุนุจ 2

    private int playerTurn = 1; // ุงูุฏูุฑ ุงูุญุงูู (1=ุงููุงุนุจ 1ุ 2=ุงููุงุนุจ 2)
    private int player1Money = 0, player2Money = 0; // ุงููููุฏ ููู ูุงุนุจ
    private int player1Lives = 5, player2Lives = 5; // ุงูุฃุฑูุงุญ ููู ูุงุนุจ

    private String player1Name = "ุงููุงุนุจ 1"; // ุงุณู ุงููุงุนุจ 1
    private String player2Name = "ุงููุงุนุจ 2"; // ุงุณู ุงููุงุนุจ 2

    private Random rand = new Random(); // ูููุฏ ุฃุฑูุงู ุนุดูุงุฆูุฉ
    private boolean rolesAssigned = false; // ุญุงูุฉ ุชุฎุตูุต ุงูุฃุฏูุงุฑ (ุจุนุฏ ุดุงุดุฉ ุงูุจุฏุงูุฉ)
    private boolean isProcessingMove = false; // ููุน ุงูุญุฑูุงุช ุงููุชุนุฏุฏุฉ ุฃุซูุงุก ูุนุงูุฌุฉ ุงูุญุฑูุฉ
    private boolean gameOver = false; // ุนูุงูุฉ ูุฅููุงุก ุงููุนุจุฉ ุนูุฏ ุฎุณุงุฑุฉ ูุงุนุจ

    // ุงููููุดุฆ: ุฅุนุฏุงุฏ ุงููุงูุฐุฉ ุงูุฑุฆูุณูุฉ
    public GameBoard11() {
        setTitle("ูุนุจุฉ ุงูููุญุฉ ุงููุทููุฑุฉ");
        setSize(1000, 1000);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        cardLayout = new CardLayout();
        mainPanel = new JPanel(cardLayout);

        initStartScreen(); // ุชููุฆุฉ ุดุงุดุฉ ุงูุจุฏุงูุฉ
        initGameBoard(); // ุชููุฆุฉ ููุญุฉ ุงููุนุจ

        mainPanel.add(startPanel, "start");
        mainPanel.add(boardPanel, "game");

        add(mainPanel);
        cardLayout.show(mainPanel, "start");

        setFocusable(true);
        requestFocusInWindow();

        // ูุนุงูุฌ ููุญุฉ ุงูููุงุชูุญ ูุชุญุฑูู ุงููุงุนุจูู ุจุงูุฃุณูู
        addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (!rolesAssigned || isProcessingMove || gameOver) return; // ุฅููุงู ุงูุญุฑูุฉ ุนูุฏ ููุงูุฉ ุงููุนุจุฉ
                switch (e.getKeyCode()) {
                    case KeyEvent.VK_UP -> movePlayer(-1, 0);
                    case KeyEvent.VK_DOWN -> movePlayer(1, 0);
                    case KeyEvent.VK_LEFT -> movePlayer(0, -1);
                    case KeyEvent.VK_RIGHT -> movePlayer(0, 1);
                }
            }
        });
    }

    // ุชููุฆุฉ ุดุงุดุฉ ุงูุจุฏุงูุฉ (ุฅุฏุฎุงู ุฃุณูุงุก ุงููุงุนุจูู ูุงุฎุชูุงุฑ ุงููุงุนุจ ุงูุฃูู ูุน ุชุนูููุงุช)
    private void initStartScreen() {
        startPanel = new JPanel(new BorderLayout());

        // ููุตู "ุงูุณูุงู ุนูููู" ูู ุงูุฃุนูู
        JLabel greetingLabel = new JLabel("ุงูุณูุงู ุนูููู", SwingConstants.CENTER);
        greetingLabel.setFont(new Font("Arial", Font.BOLD, 48));
        greetingLabel.setBorder(BorderFactory.createEmptyBorder(20, 10, 20, 10));

        // ุนููุงู ุงููุนุจุฉ
        JLabel title = new JLabel("<html><center>ูุฑุญุจุงู ุจู ูู ูุนุจุฉ ุงูุฐูุงุก<br>ุฃุฏุฎู ุฃุณูุงุก ุงููุงุนุจูู ุซู ุงุถุบุท ุงุจุฏุฃ</center></html>", SwingConstants.CENTER);
        title.setFont(new Font("Arial", Font.BOLD, 40));
        title.setBorder(BorderFactory.createEmptyBorder(20, 10, 40, 10));

        // ููุญุฉ ุฅุฏุฎุงู ุฃุณูุงุก ุงููุงุนุจูู ูุงุฎุชูุงุฑ ุงููุงุนุจ ุงูุฃูู
        JPanel selectionPanel = new JPanel(new GridLayout(3, 2, 10, 10));
        selectionPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

        JLabel p1NameLabel = new JLabel("ุงุณู ุงููุงุนุจ 1: ");
        p1NameLabel.setFont(new Font("Arial", Font.BOLD, 28));
        JTextField p1NameField = new JTextField("ุงููุงุนุจ 1", 15);
        p1NameField.setFont(new Font("Arial", Font.PLAIN, 24));

        JLabel p2NameLabel = new JLabel("ุงุณู ุงููุงุนุจ 2: ");
        p2NameLabel.setFont(new Font("Arial", Font.BOLD, 28));
        JTextField p2NameField = new JTextField("ุงููุงุนุจ 2", 15);
        p2NameField.setFont(new Font("Arial", Font.PLAIN, 24));

        JLabel selectLabel = new JLabel("ุงุฎุชุฑ ุงููุงุนุจ ุงูุฃูู: ");
        selectLabel.setFont(new Font("Arial", Font.BOLD, 28));
        String[] playerOptions = {"ุงููุงุนุจ 1", "ุงููุงุนุจ 2"};
        JComboBox<String> playerSelector = new JComboBox<>(playerOptions);
        playerSelector.setFont(new Font("Arial", Font.PLAIN, 24));

        selectionPanel.add(p1NameLabel);
        selectionPanel.add(p1NameField);
        selectionPanel.add(p2NameLabel);
        selectionPanel.add(p2NameField);
        selectionPanel.add(selectLabel);
        selectionPanel.add(playerSelector);

        // ุฒุฑ ุจุฏุก ุงููุนุจุฉ
        JButton startButton = new JButton("ุงุจุฏุฃ ุงููุนุจุฉ");
        startButton.setFont(new Font("Arial", Font.BOLD, 28));
        startButton.setBackground(Color.ORANGE);
        startButton.setFocusable(false);

        startButton.addActionListener(e -> {
            if (!rolesAssigned) {
                player1Name = p1NameField.getText().trim().isEmpty() ? "ุงููุงุนุจ 1" : p1NameField.getText().trim();
                player2Name = p2NameField.getText().trim().isEmpty() ? "ุงููุงุนุจ 2" : p2NameField.getText().trim();
                playerOptions[0] = player1Name;
                playerOptions[1] = player2Name;
                playerSelector.repaint();
                playerTurn = playerSelector.getSelectedIndex() + 1;
                rolesAssigned = true;
                cardLayout.show(mainPanel, "game");
                updateBoard();
                requestFocusInWindow();
            }
        });

        // ุฒุฑ ุชุนูููุงุช ุงููุนุจุฉ
        JButton instructionsButton = new JButton("ุชุนูููุงุช ุงููุนุจุฉ");
        instructionsButton.setFont(new Font("Arial", Font.BOLD, 28));
        instructionsButton.setBackground(Color.LIGHT_GRAY);
        instructionsButton.setFocusable(false);

        instructionsButton.addActionListener(e -> {
            String instructions = "<html><body style='text-align: center; font-family: Arial; font-size: 16px;'>"
                    + "<h2>ุชุนูููุงุช ุงููุนุจุฉ</h2>"
                    + "<p>1. ุงููุนุจุฉ ูุฎุตุตุฉ ููุงุนุจูู ุงุซููู ูุชุญุฑูุงู ุนูู ููุญุฉ 9x9 ุจุงุณุชุฎุฏุงู ููุงุชูุญ ุงูุฃุณูู (โ, โ, โ, โ).</p>"
                    + "<p>2. ุงููุฏู: ุฌูุน ุงููููุฏ (๐ฐ) ูููุตูู ุฅูู 2000 ูุชุญููููุง ุฅูู ุญูุงุฉ ุฅุถุงููุฉ (โค๏ธ)ุ ูุชุฌูุจ ุฎุณุงุฑุฉ ุงูุฃุฑูุงุญ (๐ค).</p>"
                    + "<p>3. ุนูุฏ ุงููููู ุนูู ุฎููุฉ ุชุญุชูู ุนูู โุ ูุฌุจ ุงูุฅุฌุงุจุฉ ุนูู ุณุคุงู. ุงูุฅุฌุงุจุฉ ุงูุตุญูุญุฉ ุชููุญ 500 ูููุฏุ ูุงูุฎุงุทุฆุฉ ุชุทุฑุญ ุญูุงุฉ.</p>"
                    + "<p>4. ุชุญุชูู ุงูููุญุฉ ุนูู ุฌุฏุฑุงู (ููููุง ุฑูุงุฏู) ูุง ูููู ุงููุฑูุฑ ุนุจุฑูุง.</p>"
                    + "<p>5. ูุชู ุชุจุฏูู ุงูุฃุฏูุงุฑ ุจุนุฏ ูู ุญุฑูุฉ ุฃู ุฅุฌุงุจุฉ. ุงููุงุนุจ ุงูุฐู ุชููุฏ ุฃุฑูุงุญู (ุชุตุจุญ 0) ูุฎุณุฑุ ูุงูุขุฎุฑ ูููุฒ.</p>"
                    + "</body></html>";
            JOptionPane.showMessageDialog(this, instructions, "ุชุนูููุงุช ุงููุนุจุฉ", JOptionPane.INFORMATION_MESSAGE);
        });

        // ููุญุฉ ุงูุฃุฒุฑุงุฑ ูู ุงูุฃุณูู
        JPanel buttonPanel = new JPanel(new GridLayout(1, 2, 10, 10));
        buttonPanel.add(instructionsButton);
        buttonPanel.add(startButton);

        JPanel topPanel = new JPanel(new BorderLayout());
        topPanel.add(greetingLabel, BorderLayout.NORTH);
        topPanel.add(title, BorderLayout.CENTER);

        startPanel.add(topPanel, BorderLayout.NORTH);
        startPanel.add(selectionPanel, BorderLayout.CENTER);
        startPanel.add(buttonPanel, BorderLayout.SOUTH);
    }

    // ุชููุฆุฉ ููุญุฉ ุงููุนุจ (ุฅูุดุงุก ุงูุฎูุงูุงุ ุชูุฒูุน ุงูุฌุฏุฑุงู ูุงูุชุฃุซูุฑุงุช)
    private void initGameBoard() {
        boardPanel = new JPanel(new BorderLayout());
        boardPanel.setBackground(new Color(245, 245, 220)); // ุฎูููุฉ ุจูุฌ ูููุญุฉ

        // ุฅูุดุงุก ุดุจูุฉ ุงูุฎูุงูุง (9x9 ุฃุฒุฑุงุฑ)
        JPanel gridPanel = new JPanel(new GridLayout(SIZE, SIZE));
        Dimension cellSize = new Dimension(60, 60);
        for (int i = 0; i < SIZE; i++) {
            for (int j = 0; j < SIZE; j++) {
                JButton cell = new JButton();
                cell.setPreferredSize(cellSize);
                cell.setFont(new Font("Noto Color Emoji", Font.BOLD, 20));
                if (cell.getFont().canDisplayUpTo("๐ฐ") != -1) {
                    cell.setFont(new Font("Segoe UI Emoji", Font.BOLD, 20));
                }
                cell.setFocusable(false);
                cells[i][j] = cell;
                gridPanel.add(cell);
            }
        }

        // ุชูุฒูุน ุงูุฌุฏุฑุงู ูุงูุชุฃุซูุฑุงุช
        distributeWalls();
        assignInitialEffects();

        JScrollPane scrollPane = new JScrollPane(gridPanel);
        boardPanel.add(scrollPane, BorderLayout.CENTER);

        // ููุญุฉ ูุนูููุงุช ุงููุงุนุจูู
        infoPanel = new JPanel(new GridLayout(2, 1));
        p1Info = new JLabel(player1Name + ": ุงููุงู 0 JD - ุงูุฃุฑูุงุญ: 5", SwingConstants.CENTER);
        p2Info = new JLabel(player2Name + ": ุงููุงู 0 JD - ุงูุฃุฑูุงุญ: 5", SwingConstants.CENTER);
        p1Info.setFont(new Font("Arial", Font.BOLD, 22));
        p2Info.setFont(new Font("Arial", Font.BOLD, 22));
        p1Info.setOpaque(true);
        p2Info.setOpaque(true);
        infoPanel.add(p1Info);
        infoPanel.add(p2Info);

        boardPanel.add(infoPanel, BorderLayout.NORTH);

        // ููุตู ุงูุชุฃุซูุฑ (ูุธูุฑ ูู ุงูุฃุณูู ุนูุฏ ูุดู ุฎููุฉ)
        effectLabel = new JLabel("", SwingConstants.CENTER);
        effectLabel.setFont(new Font("Noto Color Emoji", Font.BOLD, 30));
        if (effectLabel.getFont().canDisplayUpTo("๐ฐ") != -1) {
            effectLabel.setFont(new Font("Segoe UI Emoji", Font.BOLD, 30));
        }
        effectLabel.setOpaque(true);
        effectLabel.setBackground(new Color(255, 255, 200));
        effectLabel.setVisible(false);
        boardPanel.add(effectLabel, BorderLayout.PAGE_END);
    }

    // ุชูุฒูุน 15 ุฌุฏุงุฑูุง ุนุดูุงุฆููุง (ูุง ุชุธูุฑ ูู ุฃูู ุตููู ุฃู ุนููุฏูู)
    private void distributeWalls() {
        // ุชููุฆุฉ ุงูููุญุฉ ุจุฏูู ุชุฃุซูุฑุงุช
        for (int i = 0; i < SIZE; i++) {
            for (int j = 0; j < SIZE; j++) {
                boardEffects[i][j] = 1; // ุงูุชุฃุซูุฑ ุงูุงูุชุฑุงุถู: ูููุฏ
                revealed[i][j] = false;
            }
        }

        // ูุถุน 15 ุฌุฏุงุฑูุง ูู ุฎูุงูุง ูุณููุญุฉ (i >= 2 ุฃู j >= 2)
        int wallsToPlace = 15;
        int placedWalls = 0;
        while (placedWalls < wallsToPlace) {
            int i = rand.nextInt(SIZE);
            int j = rand.nextInt(SIZE);
            if ((i >= 2 || j >= 2) && boardEffects[i][j] != 0 && !(i == 0 && j == 0)) {
                boardEffects[i][j] = 0; // ุฌุฏุงุฑ
                placedWalls++;
            }
        }
    }

    // ุชูุฒูุน ุงูุชุฃุซูุฑุงุช (ูููุฏุ ูููุจุ ุฃุณุฆูุฉ) ุนูู ุงูุฎูุงูุง ุบูุฑ ุงูุฌุฏุฑุงู
    private void assignInitialEffects() {
        for (int i = 0; i < SIZE; i++) {
            for (int j = 0; j < SIZE; j++) {
                if (boardEffects[i][j] != 0) {
                    int[] effects = {1, 2, 3, 5}; // ูููุฏุ ููุจุ ููุจ ุฃุณูุฏุ ุณุคุงู
                    boardEffects[i][j] = effects[rand.nextInt(effects.length)];
                }
            }
        }
        // ุงูุชุฃูุฏ ูู ุฃู ุงูุฎููุฉ (0,0) ููุณุช ุฌุฏุงุฑูุง
        if (boardEffects[0][0] == 0) {
            int[] effects = {1, 2, 3, 5};
            boardEffects[0][0] = effects[rand.nextInt(effects.length)];
        }
    }

    // ุชุญุฏูุซ ูุงุฌูุฉ ุงูููุญุฉ (ุนุฑุถ ุงูุฎูุงูุงุ ุงููุงุนุจููุ ุงููุนูููุงุช)
    private void updateBoard() {
        // ุชุญุฏูุซ ุฎูููุฉ ููุตูุต ุงูุฎูุงูุง
        for (int i = 0; i < SIZE; i++) {
            for (int j = 0; j < SIZE; j++) {
                JButton cell = cells[i][j];
                if (boardEffects[i][j] == 0) {
                    cell.setBackground(Color.DARK_GRAY);
                    cell.setText("");
                    cell.setForeground(Color.BLACK);
                    revealed[i][j] = true;
                } else {
                    cell.setBackground(new Color(240, 248, 255));
                    cell.setText("");
                    cell.setForeground(Color.BLACK);
                }
            }
        }

        // ุชุญุฏูุซ ุฎููุฉ ุงููุงุนุจ 1
        cells[player1[0]][player1[1]].setBackground(Color.GREEN);
        EffectInfo effectInfo1 = revealed[player1[0]][player1[1]] ? getEffectSymbol(boardEffects[player1[0]][player1[1]]) : new EffectInfo("", Color.BLACK);
        cells[player1[0]][player1[1]].setText(effectInfo1.symbol.isEmpty() ? "P1" : effectInfo1.symbol);
        cells[player1[0]][player1[1]].setForeground(effectInfo1.color);

        // ุชุญุฏูุซ ุฎููุฉ ุงููุงุนุจ 2
        cells[player2[0]][player2[1]].setBackground(Color.CYAN);
        EffectInfo effectInfo2 = revealed[player2[0]][player2[1]] ? getEffectSymbol(boardEffects[player2[0]][player2[1]]) : new EffectInfo("", Color.BLACK);
        cells[player2[0]][player2[1]].setText(effectInfo2.symbol.isEmpty() ? "P2" : effectInfo2.symbol);
        cells[player2[0]][player2[1]].setForeground(effectInfo2.color);

        // ุชุญุฏูุซ ูุนูููุงุช ุงููุงุนุจูู (ุงููุงูุ ุงูุฃุฑูุงุญุ ุงูุฏูุฑ)
        p1Info.setText(player1Name + ": ุงููุงู " + player1Money + " JD - ุงูุฃุฑูุงุญ: " + player1Lives + (playerTurn == 1 && !gameOver ? " โ ุฏูุฑู" : ""));
        p2Info.setText(player2Name + ": ุงููุงู " + player2Money + " JD - ุงูุฃุฑูุงุญ: " + player2Lives + (playerTurn == 2 && !gameOver ? " โ ุฏูุฑู" : ""));
        p1Info.setBackground(playerTurn == 1 && !gameOver ? Color.GREEN : Color.WHITE);
        p2Info.setBackground(playerTurn == 2 && !gameOver ? Color.CYAN : Color.WHITE);
    }

    // ูุงุฆู ูุชุฎุฒูู ุฑูุฒ ูููู ุงูุชุฃุซูุฑ
    private static class EffectInfo {
        String symbol;
        Color color;

        EffectInfo(String symbol, Color color) {
            this.symbol = symbol;
            this.color = color;
        }
    }

    // ุฅุฑุฌุงุน ุฑูุฒ ูููู ุงูุชุฃุซูุฑ ุจูุงุกู ุนูู ุฑูู ุงูุชุฃุซูุฑ
    private EffectInfo getEffectSymbol(int effect) {
        return switch (effect) {
            case 1 -> new EffectInfo("๐ฐ", Color.YELLOW); // ูููุฏ
            case 2 -> new EffectInfo("โค๏ธ", Color.RED); // ููุจ
            case 3 -> new EffectInfo("๐ค", Color.BLACK); // ููุจ ุฃุณูุฏ
            case 5 -> new EffectInfo("โ", Color.BLUE); // ุณุคุงู
            default -> new EffectInfo("", Color.BLACK);
        };
    }

    // ุชุญุฑูู ุงููุงุนุจ ุฅูู ุฎููุฉ ุฌุฏูุฏุฉ
    private void movePlayer(int dx, int dy) {
        if (isProcessingMove || gameOver) return; // ุฅููุงู ุงูุญุฑูุฉ ุนูุฏ ููุงูุฉ ุงููุนุจุฉ
        isProcessingMove = true;

        int[] currentPlayer = playerTurn == 1 ? player1 : player2;
        int prevX = currentPlayer[0];
        int prevY = currentPlayer[1];
        int newX = prevX + dx;
        int newY = prevY + dy;

        // ุงูุชุญูู ูู ุญุฏูุฏ ุงูููุญุฉ ูุนุฏู ุงูุงุตุทุฏุงู ุจุฌุฏุงุฑ
        if (newX < 0 || newX >= SIZE || newY < 0 || newY >= SIZE) {
            isProcessingMove = false;
            return;
        }
        if (boardEffects[newX][newY] == 0) {
            isProcessingMove = false;
            return;
        }

        currentPlayer[0] = newX;
        currentPlayer[1] = newY;

        // ุนุฑุถ ุฑูุฒ ุงููุงุนุจ ุฃููุงู
        cells[newX][newY].setText(playerTurn == 1 ? "P1" : "P2");
        cells[newX][newY].setForeground(Color.BLACK);
        updateBoard();

        // ุชุฃุฎูุฑ ุนุฑุถ ุฑูุฒ ุงูุชุฃุซูุฑ (0.5 ุซุงููุฉ)
        revealed[newX][newY] = true;
        EffectInfo effectInfo = getEffectSymbol(boardEffects[newX][newY]);
        Timer effectTimer = new Timer(500, e -> {
            cells[newX][newY].setText(effectInfo.symbol);
            cells[newX][newY].setForeground(effectInfo.color);
        });
        effectTimer.setRepeats(false);
        effectTimer.start();

        // ูุนุงูุฌุฉ ุชุฃุซูุฑ ุงูุฎููุฉ
        handleCellEffect(newX, newY);

        // ุงูุงุญุชูุงุธ ุจุงูุฎููุฉ ุงูุณุงุจูุฉ ุจุฏูู ุฌุฏุงุฑ
        revealed[prevX][prevY] = false;
        if (boardEffects[prevX][prevY] == 0) {
            int[] effects = {1, 2, 3, 5};
            boardEffects[prevX][prevY] = effects[rand.nextInt(effects.length)];
        }

        // ุฅุฎูุงุก ุฑูุฒ ุงูุชุฃุซูุฑ ุจุนุฏ 1.2 ุซุงููุฉ
        Timer clearEffectTimer = new Timer(1200, e -> {
            revealed[newX][newY] = false;
            updateBoard();
        });
        clearEffectTimer.setRepeats(false);
        clearEffectTimer.start();
    }

    // ูุนุงูุฌุฉ ุชุฃุซูุฑ ุงูุฎููุฉ (ูููุฏุ ููุจุ ุณุคุงู)
    private void handleCellEffect(int x, int y) {
        if (gameOver) return; // ุฅููุงู ุงูุชุฃุซูุฑุงุช ุนูุฏ ููุงูุฉ ุงููุนุจุฉ
        int effect = boardEffects[x][y];
        // ุชุนููู ุชุฃุซูุฑ ุฌุฏูุฏ (ุบูุฑ ุฌุฏุงุฑ)
        int[] effects = {1, 2, 3, 5};
        boardEffects[x][y] = effects[rand.nextInt(effects.length)];

        EffectInfo effectInfo = getEffectSymbol(effect);
        int currentPlayerIndex = playerTurn; // ุญูุธ ุงููุงุนุจ ุงูุญุงูู ุงูุฐู ุฏุงุณ ุนูู ุงูุฎููุฉ
        Runnable effectAction = switch (effect) {
            case 1 -> () -> {
                addMoney(1000, currentPlayerIndex); // ุชุทุจูู ุงููููุฏ ุนูู ุงููุงุนุจ ุงูุญุงูู
                isProcessingMove = false;
            };
            case 2 -> () -> {
                addLife(1, currentPlayerIndex); // ุชุทุจูู ุงูุญูุงุฉ ุนูู ุงููุงุนุจ ุงูุญุงูู
                isProcessingMove = false;
            };
            case 3 -> () -> {
                addLife(-1, currentPlayerIndex); // ุชุทุจูู ุฎุณุงุฑุฉ ุงูุญูุงุฉ ุนูู ุงููุงุนุจ ุงูุญุงูู
                isProcessingMove = false;
            };
            case 5 -> this::askQuestion;
            default -> () -> {
                isProcessingMove = false;
            };
        };

        showEffect(effectInfo, effectAction);
        // ุชุจุฏูู ุงูุฏูุฑ ุจุนุฏ ุชุทุจูู ุงูุชุฃุซูุฑ
        if (effect != 5) { // ูุง ูุชู ุชุจุฏูู ุงูุฏูุฑ ูู ุญุงูุฉ ุงูุณุคุงู ุญุชู ูุชู ุงูุฅุฌุงุจุฉ
            playerTurn = (playerTurn == 1) ? 2 : 1;
        }
    }

    // ุนุฑุถ ุงูุชุฃุซูุฑ ูู ููุตู ุงูุฃุณูู ูุน ุชุฃุฎูุฑ
    private void showEffect(EffectInfo effectInfo, Runnable effectAction) {
        if (gameOver) return; // ุฅููุงู ุงูุนุฑุถ ุนูุฏ ููุงูุฉ ุงููุนุจุฉ
        effectLabel.setText(effectInfo.symbol + " " + switch (effectInfo.symbol) {
            case "๐ฐ" -> "ูุงู +1000";
            case "โค๏ธ" -> "ุญูุงุฉ +1";
            case "๐ค" -> "ุฎุณุงุฑุฉ -1";
            case "โ" -> "ุณุคุงู";
            default -> "";
        });
        effectLabel.setForeground(effectInfo.color);
        effectLabel.setVisible(true);

        // ุฅุฎูุงุก ุงูุชุฃุซูุฑ ูุชูููุฐ ุงูุฅุฌุฑุงุก ุจุนุฏ 1.2 ุซุงููุฉ
        Timer timer = new Timer(1200, e -> {
            effectLabel.setVisible(false);
            effectAction.run();
            updateBoard();
        });
        timer.setRepeats(false);
        timer.start();
    }

    // ุฅุถุงูุฉ ูููุฏ ููุงุนุจ ูุญุฏุฏ (2000 ูููุฏ = ุญูุงุฉ ุฅุถุงููุฉ)
    private void addMoney(int amount, int playerIndex) {
        if (gameOver) return; // ุฅููุงู ุงูุฅุถุงูุฉ ุนูุฏ ููุงูุฉ ุงููุนุจุฉ
        if (playerIndex == 1) {
            player1Money += amount;
            if (player1Money >= 2000) {
                player1Money = 0;
                player1Lives += 1;
                JOptionPane.showMessageDialog(this, "ุชู ุงุณุชุจุฏุงู 2000 ูููุฏ ุจู 1 ุฑูุญ ูู " + player1Name + "!", "ูุจุฑูู!", JOptionPane.INFORMATION_MESSAGE);
            } else {
                showEffect(new EffectInfo("๐ฐ", Color.YELLOW), () -> {});
            }
        } else {
            player2Money += amount;
            if (player2Money >= 2000) {
                player2Money = 0;
                player2Lives += 1;
                JOptionPane.showMessageDialog(this, "ุชู ุงุณุชุจุฏุงู 2000 ูููุฏ ุจู 1 ุฑูุญ ูู " + player2Name + "!", "ูุจุฑูู!", JOptionPane.INFORMATION_MESSAGE);
            } else {
                showEffect(new EffectInfo("๐ฐ", Color.YELLOW), () -> {});
            }
        }
        updateBoard();
    }

    // ุฅุถุงูุฉ ุฃู ุฎุตู ุงูุฃุฑูุงุญ ููุงุนุจ ูุญุฏุฏ (ุงูุฎุณุงุฑุฉ ุนูุฏ ุตูุฑ ุฃุฑูุงุญ)
    private void addLife(int amount, int playerIndex) {
        if (gameOver) return; // ุฅููุงู ุงูุชุบููุฑ ุนูุฏ ููุงูุฉ ุงููุนุจุฉ
        if (playerIndex == 1) {
            player1Lives += amount;
            // ููุน ุงูุฃุฑูุงุญ ูู ุฃู ุชุตุจุญ ุฃูู ูู 0
            if (player1Lives < 0) player1Lives = 0;
            // ุชุญุฏูุซ ุงูููุญุฉ ูุนุฑุถ ุนุฏุฏ ุงูุฃุฑูุงุญ ุงููุญุฏุซ
            updateBoard();
            if (player1Lives == 0) {
                gameOver = true; // ุชุนููู ุนูุงูุฉ ุงูููุงูุฉ
                int response = JOptionPane.showOptionDialog(
                    this,
                    player1Name + " ุฎุณุฑ! ุงูุชูุช ุงููุนุจุฉ.\n" + player2Name + " ูู ุงููุงุฆุฒ!",
                    "ููุงูุฉ ุงููุนุจุฉ",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.INFORMATION_MESSAGE,
                    null,
                    new String[]{"ุงูุนุจ ูุฌุฏุฏุงู", "ุฎุฑูุฌ"},
                    "ุงูุนุจ ูุฌุฏุฏุงู"
                );
                if (response == JOptionPane.YES_OPTION) {
                    resetGame();
                } else {
                    System.exit(0);
                }
            }
        } else {
            player2Lives += amount;
            // ููุน ุงูุฃุฑูุงุญ ูู ุฃู ุชุตุจุญ ุฃูู ูู 0
            if (player2Lives < 0) player2Lives = 0;
            // ุชุญุฏูุซ ุงูููุญุฉ ูุนุฑุถ ุนุฏุฏ ุงูุฃุฑูุงุญ ุงููุญุฏุซ
            updateBoard();
            if (player2Lives == 0) {
                gameOver = true; // ุชุนููู ุนูุงูุฉ ุงูููุงูุฉ
                int response = JOptionPane.showOptionDialog(
                    this,
                    player2Name + " ุฎุณุฑ! ุงูุชูุช ุงููุนุจุฉ.\n" + player1Name + " ูู ุงููุงุฆุฒ!",
                    "ููุงูุฉ ุงููุนุจุฉ",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.INFORMATION_MESSAGE,
                    null,
                    new String[]{"ุงูุนุจ ูุฌุฏุฏุงู", "ุฎุฑูุฌ"},
                    "ุงูุนุจ ูุฌุฏุฏุงู"
                );
                if (response == JOptionPane.YES_OPTION) {
                    resetGame();
                } else {
                    System.exit(0);
                }
            }
        }
    }

    // ุฅุนุงุฏุฉ ุชุนููู ุงููุนุจุฉ (ุฅุฑุฌุงุน ุงููุงุนุจูู ูุงููุชุบูุฑุงุช ุฅูู ุงูุญุงูุฉ ุงูุงูุชุฑุงุถูุฉ)
    private void resetGame() {
        player1[0] = 0;
        player1[1] = 0;
        player2[0] = 0;
        player2[1] = 0;

        playerTurn = 1;
        player1Money = 0;
        player2Money = 0;
        player1Lives = 5;
        player2Lives = 5;
        rolesAssigned = false;
        gameOver = false; // ุฅุนุงุฏุฉ ุชุนููู ุนูุงูุฉ ุงูููุงูุฉ

        // ุฅุนุงุฏุฉ ุชูุฒูุน ุงูุฌุฏุฑุงู ูุงูุชุฃุซูุฑุงุช
        distributeWalls();
        assignInitialEffects();

        cardLayout.show(mainPanel, "start");
        updateBoard();
    }

    // ุทุฑุญ ุณุคุงู ุนุดูุงุฆู ูุงูุชุญูู ูู ุงูุฅุฌุงุจุฉ
    private void askQuestion() {
        if (gameOver) return; // ุฅููุงู ุงูุฃุณุฆูุฉ ุนูุฏ ููุงูุฉ ุงููุนุจุฉ
        /*
         * ุงูุฃุณุฆูุฉ ููุณูุฉ ุฅูู ูุฆุงุช: ุซูุงูุฉ ุนุงูุฉุ ุฌุบุฑุงููุงุ ุฑูุงุถูุงุชุ ุนูููุ ุชุงุฑูุฎุ ุฏูููุฉ ุฅุณูุงููุฉุ ูุชููุน.
         * ุชุญุชูู ุนูู 88 ุณุคุงููุงุ ูุน ุฒูุงุฏุฉ ุงูุฃุณุฆูุฉ ุงูุฏูููุฉ (21 ุณุคุงููุง).
         * ุชู ุญุฐู ุงูุฃุณุฆูุฉ ุงูุชุงููุฉ ุจูุงุกู ุนูู ุงูุทูุจ:
         * - ุงูุฃูุฏูุฒุ ุฏุงููุงูุบ-ูููุดุงูุ ููููุงุฑุฏู ุฏุง ูููุดูุ ูุงุฑู ููุฑูุ ุฃูููุงููุณูุงุ ุฃูุชุงูุง.
         * ุงูุฅุฌุงุจุฉ ุงูุตุญูุญุฉ ุชููุญ 500 ูููุฏุ ูุงูุฎุงุทุฆุฉ ุชุทุฑุญ ุญูุงุฉ.
         * ุงูุฅุฌุงุจุงุช ุบูุฑ ุญุณุงุณุฉ ููุญุฑููุ ูุงูุชูุงุฑูุฎ/ุงูุญุณุงุจ ุจุงูุฃุฑูุงู.
         */
        String[] questions = {
            // ุซูุงูุฉ ุนุงูุฉ
            "ูุง ูู ููู ุงูุณูุงุก ูู ููู ูุดูุณุ",
            "ูู ุนุฏุฏ ุฃูุงู ุงูุฃุณุจูุนุ",
            "ูุง ุงุณู ุงูุญููุงู ุงูุฐู ููุนุฑู ุจุงูููู ูู ุงูุบุงุจุฉุ",
            "ูู ุนุฏุฏ ุฃููุงู ููุณ ูุฒุญุ",
            "ูุง ูู ุงุณู ุฃูุจุฑ ูุญูุท ูู ุงูุนุงููุ",
            "ูุง ูู ุงุณู ุฃูุจุฑ ูููุจ ูู ุงููุฌููุนุฉ ุงูุดูุณูุฉุ",
            "ูุง ูู ุงุณู ุฃุณุฑุน ุญููุงู ุจุฑู ูู ุงูุนุงููุ",
            "ูุง ูู ุงุณู ุฃูุจุฑ ุฏููุฉ ูู ุญูุซ ุงููุณุงุญุฉุ",
            "ูุง ูู ุงุณู ุฃูุจุฑ ุทุงุฆุฑ ูู ุงูุนุงููุ",
            "ูุง ูู ุงุณู ุฃูุจุฑ ุฏููุงุตูุฑ ุนุงุด ุนูู ุงูุฃุฑุถุ",
            // ุฌุบุฑุงููุง
            "ูุง ูู ุนุงุตูุฉ ุงูุฃุฑุฏูุ",
            "ูุง ูู ุนุงุตูุฉ ุงูุณุนูุฏูุฉุ",
            "ูุง ูู ุฃูุจุฑ ูุงุฑุฉุ",
            "ูุง ูู ุฃุทูู ุฃููุงุฑ ุงูุนุงููุ",
            "ูุง ูู ุนุงุตูุฉ ูุฑูุณุงุ",
            "ูุง ูู ุฃุนูู ุฌุจู ูู ุงูุนุงููุ",
            "ูุง ูู ุนุงุตูุฉ ุงููุงุจุงูุ",
            "ูุง ูู ุนุงุตูุฉ ูุตุฑุ",
            "ูุง ูู ุงุณู ุฃูุจุฑ ุตุญุฑุงุก ูู ุงูุนุงููุ",
            "ูุง ูู ุนุงุตูุฉ ุงูุจุฑุงุฒููุ",
            "ูุง ูู ุนุงุตูุฉ ุงูููุฏุ",
            // ุฑูุงุถูุงุช
            "ูุง ูู ูุงุชุฌ 2 + 3ุ",
            "ูุง ูู ูุงุชุฌ 5 ร 2ุ",
            "ูุง ูู ูุงุชุฌ 12 รท 3ุ",
            "ูู ุนุฏุฏ ุฃุถูุงุน ุงููุซูุซุ",
            "ูุง ูู ูุงุชุฌ 7 + 8ุ",
            "ูุง ูู ูุงุชุฌ 9 ร 3ุ",
            "ูุง ูู ูุงุชุฌ 16 รท 4ุ",
            "ูู ุนุฏุฏ ุฃุถูุงุน ุงููุฑุจุนุ",
            "ูุง ูู ูุงุชุฌ 6 ร 7ุ",
            "ูุง ูู ูุงุชุฌ 20 รท 5ุ",
            "ูุง ูู ูุงุชุฌ 15 + 9ุ",
            "ูู ุนุฏุฏ ุฃุถูุงุน ุงูุฎูุงุณูุ",
            "ูุง ูู ูุงุชุฌ 8 ร 4ุ",
            "ูุง ูู ูุงุชุฌ 100 รท 10ุ",
            // ุนููู
            "ูุง ูู ุงูุบุงุฒ ุงูุฐู ูุดูู ูุนุธู ุงูุบูุงู ุงูุฌูู ููุฃุฑุถุ",
            "ูุง ูู ุงููููุจ ุงูุฃูุฑุจ ุฅูู ุงูุดูุณุ",
            "ูุง ูู ุงูุนูุตุฑ ุงูููููุงุฆู ุงูุฐู ุฑูุฒู Hุ",
            "ูุง ูู ุงุณู ุงูุญููุงู ุงูุฐู ูุนูุด ูู ุงููุงุก ููุชููุณ ุจุงูุฎูุงุดููุ",
            "ูุง ูู ุงุณู ุงูุนุถู ุงูุฐู ูุถุฎ ุงูุฏู ูู ุฌุณู ุงูุฅูุณุงูุ",
            "ูุง ูู ุงููููุจ ุงููุนุฑูู ุจุงูุญููุงุชุ",
            "ูุง ูู ุงูุนูุตุฑ ุงูููููุงุฆู ุงูุฐู ุฑูุฒู Oุ",
            "ูุง ูู ุงุณู ุฃูุจุฑ ุนุถู ูู ุฌุณู ุงูุฅูุณุงูุ",
            "ูุง ูู ุงุณู ุงูุญููุงู ุงูุฐู ููุนุฑู ุจุฃูู ุฃูุจุฑ ูุฎููู ุนูู ุงูุฃุฑุถุ",
            "ูุง ูู ุงุณู ุงูุนุงูู ุงูุฐู ุงูุชุดู ููุงููู ุงูุญุฑูุฉุ",
            "ูุง ูู ุงุณู ุงููููุจ ุงูุฐู ููุนุฑู ุจุงุณู ุงููููุจ ุงูุฃุญูุฑุ",
            "ูุง ูู ุงุณู ุงูุฌูุงุฒ ุงูุฐู ููุชุดู ุงูุฒูุงุฒูุ",
            "ูุง ูู ุงุณู ุงููุงุฏุฉ ุงูุชู ุชูุณุชุฎุฏู ูู ุตูุงุนุฉ ุงูุฃุณูุงู ุงูููุฑุจุงุฆูุฉุ",
            // ุชุงุฑูุฎ
            "ูู ุฃู ุนุงู ุจุฏุฃุช ุงูุญุฑุจ ุงูุนุงูููุฉ ุงูุซุงููุฉุ",
            "ูู ูู ุงูุฎูููุฉ ุงูุฃูู ูู ุงูุฅุณูุงูุ",
            "ูุง ูู ุงูุญุถุงุฑุฉ ุงูุชู ุจูุช ุงูุฃูุฑุงูุงุช ูู ูุตุฑุ",
            "ูู ุฃู ุนุงู ุงูุชุดู ูุฑูุณุชููุฑ ูููููุจูุณ ุฃูุฑููุงุ",
            "ูู ูู ุงูููู ุงูุฐู ุจูู ุชุงุฌ ูุญูุ",
            "ูู ุฃู ุนุงู ุจุฏุฃุช ุงูุญุฑุจ ุงูุนุงูููุฉ ุงูุฃูููุ",
            "ูู ูู ุงููุงุฆุฏ ุงูุฐู ูุชุญ ุงููุณุทูุทูููุฉุ",
            "ูู ุฃู ุนุงู ุชู ุฅูุดุงุก ุงูุฃูู ุงููุชุญุฏุฉุ",
            "ูู ูู ุงูุนุงูู ุงูุฐู ุงุฎุชุฑุน ุงููุตุจุงุญ ุงูููุฑุจุงุฆูุ",
            "ูู ุฃู ุนุงู ูุจุท ุงูุฅูุณุงู ุนูู ุงูููุฑ ูุฃูู ูุฑุฉุ",
            // ุฏูููุฉ ุฅุณูุงููุฉ
            "ูุง ูู ุงุณู ุฃูู ุณูุฑุฉ ูู ุงููุฑุขู ุงููุฑููุ",
            "ูู ุนุฏุฏ ุฃุฑูุงู ุงูุฅุณูุงูุ",
            "ูุง ูู ุงุณู ุงูุดูุฑ ุงูุฐู ูุตูู ููู ุงููุณููููุ",
            "ูู ูู ุงููุจู ุงูุฐู ุจูู ุงููุนุจุฉ ูุน ุงุจููุ",
            "ูุง ูู ุงูุตูุงุฉ ุงูุชู ุชูุตูู ูู ููุช ุงููุฌุฑุ",
            "ูู ุนุฏุฏ ุฃุฑูุงู ุงูุฅููุงูุ",
            "ูุง ูู ุงุณู ุงููุณุฌุฏ ุงูุฐู ููุน ูู ููุฉ ุงูููุฑูุฉุ",
            "ูู ูู ุงูุตุญุงุจู ุงูุฐู ููุจ ุจุฃููู ุงูุฃูุฉุ",
            "ูุง ูู ุงุณู ุงููุจู ุงูุฐู ุฃูุฑุณู ุฅูู ููู ุนุงุฏุ",
            "ูุง ูู ุงุณู ุฃูู ูุนุฑูุฉ ูู ุงูุฅุณูุงูุ",
            "ูุง ูู ุงุณู ุงููุณุฌุฏ ุงูุฐู ููุน ูู ุงููุฏุณุ",
            "ูู ูู ุงููุจู ุงูุฐู ุฃูููู ูู ุงููุงุฑ ููู ุชุญุฑููุ",
            "ูุง ูู ุงุณู ุงูุตุญุงุจู ุงูุฐู ููุจ ุจูุงุฑูู ุงูุฃูุฉุ",
            "ูุง ูู ุงุณู ุงูุณูุฑุฉ ุงูุชู ุชูุณูู ุจููุจ ุงููุฑุขูุ",
            "ูุง ูู ุงุณู ุงูุดูุฑ ุงูุฐู ููุญุฑู ููู ุงูุตูุฏุ",
            "ูุง ูู ุงุณู ุงููุจู ุงูุฐู ุนุงุด ูู ุจุทู ุงูุญูุชุ",
            "ูุง ูู ุงุณู ุงููุนุฑูุฉ ุงูุชู ููุนุช ูู ุงูุณูุฉ ุงูุซุงูุซุฉ ูููุฌุฑุฉุ",
            "ูุง ูู ุงุณู ุงูุตุญุงุจู ุงูุฐู ูุงู ุฃูู ูู ุฃุณูู ูู ุงูุฑุฌุงูุ",
            "ูุง ูู ุงุณู ุงูุฌุจู ุงูุฐู ูุฒู ุนููู ุงููุฑุขูุ",
            "ูุง ูู ุงุณู ุงูุณูุฑุฉ ุงูุชู ุชุจุฏุฃ ุจู'ุฅูุง ุฃุนุทููุงู ุงูููุซุฑ'ุ",
            "ูุง ูู ุงุณู ุงูุตุญุงุจูุฉ ุงูุชู ููุจุช ุจุฃู ุงููุคููููุ",
            // ูุชููุน
            "ูุง ูู ุงูุทุงุฆุฑ ุงูุฐู ูุง ูุทูุฑุ",
            "ูุง ูู ุงุณู ุงูุขูุฉ ุงูููุณูููุฉ ุงูุชู ุชุญุชูู ุนูู ููุงุชูุญ ุจูุถุงุก ูุณูุฏุงุกุ",
            "ูุง ูู ุงูุดูุฑ ุงูุฐู ูุฃุชู ุจุนุฏ ููุงูุฑุ",
            "ูุง ูู ุงุณู ุงูุนููุฉ ุงูุฑุณููุฉ ูู ุงููุงุจุงูุ",
            "ูุง ูู ุงุณู ุฃูุจุฑ ุญููุงู ุจุฑู ูู ุงูุนุงููุ",
            "ูุง ูู ุงุณู ุฃูู ุฑุงุฆุฏ ูุถุงุก ูุจุท ุนูู ุงูููุฑุ",
            "ูุง ูู ุงุณู ุงูุฑูุงุถุฉ ุงูุชู ุชููุนุจ ุจูุฑุฉ ููุถุฑุจ ุนูู ุทุงููุฉุ",
            "ูุง ูู ุงุณู ุงููุงุชุจ ุงูุฐู ูุชุจ ูุณุฑุญูุฉ ุฑูููู ูุฌููููุชุ",
            "ูุง ูู ุงุณู ุฃูุจุฑ ูุฏููุฉ ูู ุงูุนุงูู ูู ุญูุซ ุนุฏุฏ ุงูุณูุงูุ",
            "ูุง ูู ุงุณู ุงูุดุฑูุฉ ุงูุชู ุงุฎุชุฑุนุช ุฃูู ูุงุชู ุฐูู ุขููููุ",
            "ูุง ูู ุงุณู ุงูุฑูุงุถุฉ ุงูุชู ุชููุนุจ ุจูุฑุฉ ูุฏู ูู ููุนุจ ุนุดุจูุ"
        };
        String[] answers = {
            // ุซูุงูุฉ ุนุงูุฉ
            "ุฃุฒุฑู",
            "7",
            "ุฃุณุฏ",
            "7",
            "ุงููุงุฏุฆ",
            "ุงููุดุชุฑู",
            "ุงูููุฏ",
            "ุฑูุณูุง",
            "ุงููุนุงูุฉ",
            "ุชู ุฑููุณ",
            // ุฌุบุฑุงููุง
            "ุนูุงู",
            "ุงูุฑูุงุถ",
            "ุขุณูุง",
            "ุงูููู",
            "ุจุงุฑูุณ",
            "ุฅููุฑุณุช",
            "ุทูููู",
            "ุงููุงูุฑุฉ",
            "ุงูุตุญุฑุงุก ุงููุจุฑู",
            "ุจุฑุงุฒูููุง",
            "ูููุฏููู",
            // ุฑูุงุถูุงุช
            "5",
            "10",
            "4",
            "3",
            "15",
            "27",
            "4",
            "4",
            "42",
            "4",
            "24",
            "5",
            "32",
            "10",
            // ุนููู
            "ุงูููุชุฑูุฌูู",
            "ุนุทุงุฑุฏ",
            "ุงูููุฏุฑูุฌูู",
            "ุณููุฉ",
            "ุงูููุจ",
            "ุฒุญู",
            "ุงูุฃูุณุฌูู",
            "ุงูุฌูุฏ",
            "ุงูุญูุช ุงูุฃุฒุฑู",
            "ุฅุณุญุงู ูููุชู",
            "ุงููุฑูุฎ",
            "ุงูุณูุณููุบุฑุงู",
            "ุงููุญุงุณ",
            // ุชุงุฑูุฎ
            "1939",
            "ุฃุจู ุจูุฑ",
            "ุงููุฑุนูููุฉ",
            "1492",
            "ุดุงู ุฌูุงู",
            "1914",
            "ูุญูุฏ ุงููุงุชุญ",
            "1945",
            "ุชููุงุณ ุฅุฏูุณูู",
            "1969",
            // ุฏูููุฉ ุฅุณูุงููุฉ
            "ุงููุงุชุญุฉ",
            "5",
            "ุฑูุถุงู",
            "ุฅุจุฑุงููู",
            "ุงููุฌุฑ",
            "6",
            "ุงููุณุฌุฏ ุงูุญุฑุงู",
            "ุฃุจู ุนุจูุฏุฉ",
            "ููุฏ",
            "ุจุฏุฑ",
            "ุงููุณุฌุฏ ุงูุฃูุตู",
            "ุฅุจุฑุงููู",
            "ุนูุฑ",
            "ูุณ",
            "ุฐู ุงูุญุฌุฉ",
            "ูููุณ",
            "ุฃุญุฏ",
            "ุฃุจู ุจูุฑ",
            "ููุฑ",
            "ุงูููุซุฑ",
            "ุนุงุฆุดุฉ",
            // ูุชููุน
            "ุจุทุฑูู",
            "ุจูุงูู",
            "ูุจุฑุงูุฑ",
            "ูู",
            "ุงูุฒุฑุงูุฉ",
            "ููู ุฃุฑูุณุชุฑููุบ",
            "ุชูุณ ุงูุทุงููุฉ",
            "ููููุงู ุดูุณุจูุฑ",
            "ุทูููู",
            "ุขุจู",
            "ูุฑุฉ ุงููุฏู"
        };
        int index = rand.nextInt(questions.length);
        String answer = JOptionPane.showInputDialog(this, questions[index]);
        if (answer != null && answer.trim().equalsIgnoreCase(answers[index])) {
            JOptionPane.showMessageDialog(this, "ุฃุญุณูุช!", "ุฅุฌุงุจุฉ ุตุญูุญุฉ", JOptionPane.INFORMATION_MESSAGE);
            addMoney(500, playerTurn); // ุชุทุจูู ุงููููุฏ ุนูู ุงููุงุนุจ ุงูุญุงูู
        } else {
            JOptionPane.showMessageDialog(this, "ุฅุฌุงุจุชู ุฎุงุทุฆุฉุ ุงูุฅุฌุงุจุฉ ุงูุตุญูุญุฉ ูู: " + answers[index], "ุฅุฌุงุจุฉ ุฎุงุทุฆุฉ", JOptionPane.ERROR_MESSAGE);
            addLife(-1, playerTurn); // ุชุทุจูู ุฎุณุงุฑุฉ ุงูุญูุงุฉ ุนูู ุงููุงุนุจ ุงูุญุงูู
        }
        if (!gameOver) { // ุชุจุฏูู ุงูุฏูุฑ ููุท ุฅุฐุง ูู ุชูุชูู ุงููุนุจุฉ
            playerTurn = (playerTurn == 1) ? 2 : 1;
        }
        isProcessingMove = false;
        updateBoard();
    }

    // ููุทุฉ ุงูุจุฏุงูุฉ ูุชุดุบูู ุงููุนุจุฉ
    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            GameBoard11 gui = new GameBoard11();
            gui.setVisible(true);
        });
    }
}